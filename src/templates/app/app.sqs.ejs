import middy from '@middy/core';
import eventNormalizer from '@middy/event-normalizer';
import log from './loggger.mjs';
<% if(ssmString.length){%>import ssm from '@middy/ssm'<%}%>
<% if(sqsString.length){%>import sendMessage from './utils/sendMessageMiddleware.mjs'<%}%>
<% if(s3String.length){%>import s3Write from './utils/s3.mjs';<%}%>


const handler =  middy ((event,context) => {
    try {
      const { Records }  = event
      for (const record of Records) {
        const body = JSON.parse(record.body); 
        //Add your business logic here
        
      }
      return {<%-sqsString%>,<%-s3String%>}
    }catch (error) {
        log.error('Error processing message:', error);
        throw error;
    }
} ) 

handler
  .use(eventNormalizer())
  <%-ssmString%>
  <% if(sqsString.length){%>.use(sendMessage())<%}%>
  <% if(s3String.length){%>.use(s3Write())<%}%>
